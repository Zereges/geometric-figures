#!/bin/bash

# Geometric Figures  Copyright (C) 2015  Lukáš Ondráček <ondracek.lukas@gmail.com>, see README file

# with no parameters prints macros from consoleCmdSet.c in readable form
# with 'write' parameter updates consoleCmdSetMacrosDef.c.tmp and consoleCmdSetMacrosUndef.c.tmp

sourceFile=src/consoleCmdSet.c
defFile=src/consoleCmdSetMacrosDef.c.tmp
undefFile=src/consoleCmdSetMacrosUndef.c.tmp

if [[ $@ != "write" ]]; then
	function macro(){  #name params prefix
		echo "#define $1($2) "
		sed -n "/\[\s*MACROS CODE:/,/]/s/^$3//p" < $sourceFile
		echo "#undef $1"
	}
else
	echo -e "// Generated by 'consoleCmdSetMacros.sh write'\n// vim: filetype=c\n" > $defFile
	echo -e "// Generated by 'consoleCmdSetMacros.sh write'\n// vim: filetype=c\n" > $undefFile
	function macro(){  #name params prefix
		{
			echo -n "#define $1($2) "
			sed -n "/\[\s*MACROS CODE:/,/]/s/^$3\s*//p" < $sourceFile | tr "\n" " "
			echo
		} >> $defFile
		echo "#undef $1" >> $undefFile
	}
fi

#macro name params prefix_pattern
macro variableI NAME,GETTER,SETTER_COND,SETTER "[*n]I...:"
macro variableF NAME,GETTER,SETTER_COND,SETTER "[*n].F..:"
macro variableB NAME,GETTER,SETTER "[*n]..B.:"
macro variableC NAME,GETTER,SETTER_COND,SETTER "[*n]...C:"
macro variablesI NAME,INDEX_MIN,INDEX_MAX,INDEX_MEANING,GETTER,SETTER_COND,SETTER "[*i]I...:"
macro variablesF NAME,INDEX_MIN,INDEX_MAX,INDEX_MEANING,GETTER,SETTER_COND,SETTER "[*i].F..:"
macro variablesB NAME,INDEX_MIN,INDEX_MAX,INDEX_MEANING,GETTER,SETTER "[*i]..B.:"
macro variablesC NAME,INDEX_MIN,INDEX_MAX,INDEX_MEANING,GETTER,SETTER_COND,SETTER "[*i]...C:"
